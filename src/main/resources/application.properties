spring.application.name=DATN

#spring.datasource.url=jdbc:postgresql://localhost:5432/DATN
##spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/datn
##spring.datasource.url=jdbc:postgresql://postgres:5432/DATN
#spring.datasource.username=postgres
#spring.datasource.password=123456
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
#server.port = 8080
#server.address=0.0.0.0
#
#jwt.secret=S7v!P2qfX9aK#zL1tV3mC8eW0dT5nRgB
#jwt.expiration=3600000
#
#spring.web.resources.static-locations=file:uploads/
#spring.cloud.gcp.storage.project-id=gen-lang-client-0154921035
#spring.cloud.gcp.storage.credentials.location=file:E:/Lms/gen-lang-client-0154921035-b9cccfbfbca2.json
#spring.cloud.gcp.storage.bucket=my-bucket-name
#gcp.project.id=gen-lang-client-0154921035
#gcp.credentials.location=file:E:/Lms/gen-lang-client-0154921035-b9cccfbfbca2.json
#
#spring.cloud.gcp.sql.enabled=false
#
#spring.servlet.multipart.max-file-size=20MB
#spring.servlet.multipart.max-request-size=50MB
#google.client.id=92390825960-3eri40mudbpdp87jkmdt753nm4bkbq1u.apps.googleusercontent.com
#

# ================== DATABASE ==================
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ================== SERVER ==================
server.port=8080
server.address=0.0.0.0

# ================== JWT ==================
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000

# ================== FILE UPLOAD ==================
spring.web.resources.static-locations=file:uploads/
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=50MB

# ================== GOOGLE CLOUD STORAGE ==================
spring.cloud.gcp.storage.project-id=${GCP_PROJECT_ID}
spring.cloud.gcp.storage.bucket=${GCP_BUCKET}
spring.cloud.gcp.storage.credentials.location=${GOOGLE_APPLICATION_CREDENTIALS}
gcp.project.id=${GCP_PROJECT_ID}
gcp.credentials.location=file:/app/credentials.json

# ================== GOOGLE OAUTH ==================
google.client.id=${GOOGLE_CLIENT_ID}

# ================== DISABLE CLOUD SQL ==================
spring.cloud.gcp.sql.enabled=false
